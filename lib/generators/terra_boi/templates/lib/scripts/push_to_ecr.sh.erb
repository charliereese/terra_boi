# Requires AWS cli >= v2.x.x
# https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html

SCRIPT_DIR=$(realpath "$(dirname "${BASH_SOURCE[0]}")")
cd $SCRIPT_DIR/../../ecr

# Retrieve an authentication token and authenticate your Docker client to your registry.
AWS_REGION=$(terraform output aws_region)
AWS_ECR_REPO_URL=$(terraform output ecr_repo_url)
AWS_ECR_REPO_NAME=$(terraform output ecr_repo_name)
aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPO_URL

# Build your Docker image using the following command
DOCKERFILE_PATH="$SCRIPT_DIR/../../../."
if ! docker build -t $AWS_ECR_REPO_NAME $DOCKERFILE_PATH; then 
	echo "TERRA_BOI | Command failed. Pruning Docker memory then retrying!"
	echo "TERRA_BOI | Pruning may take a couple minutes..."
	docker system prune -a && docker build -t $AWS_ECR_REPO_NAME $DOCKERFILE_PATH
fi

# After the build completes, tag your image so you can push the image to this repository:
docker tag $AWS_ECR_REPO_NAME:latest $AWS_ECR_REPO_URL:latest

# Run the following command to push this image to your newly created AWS repository:
docker push $AWS_ECR_REPO_URL:latest
